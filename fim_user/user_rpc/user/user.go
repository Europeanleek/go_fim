// Code generated by goctl. DO NOT EDIT.
// Source: user_rpc.proto

package user

import (
	"context"

	"fim_server/fim_user/user_rpc/types/user_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserCreateRequest  = user_rpc.UserCreateRequest
	UserCreateResponse = user_rpc.UserCreateResponse
	UserInfoRequest    = user_rpc.UserInfoRequest
	UserInfoResponse   = user_rpc.UserInfoResponse

	User interface {
		// 创建用户
		UserCreate(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error)
		// 获取用户信息
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 创建用户
func (m *defaultUser) UserCreate(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error) {
	client := user_rpc.NewUserClient(m.cli.Conn())
	return client.UserCreate(ctx, in, opts...)
}

// 获取用户信息
func (m *defaultUser) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user_rpc.NewUserClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}
